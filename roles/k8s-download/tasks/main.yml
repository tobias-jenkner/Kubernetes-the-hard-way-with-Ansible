- name: Create binary directory
  file:
    path: '{{ BIN_DIR }}'
    state: directory

- name: Download k8s binaries
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    mode: 0764
  with_items:
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kube-apiserver", dest: "{{ BIN_DIR }}/kube-apiserver" }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kube-controller-manager", dest: "{{ BIN_DIR }}/kube-controller-manager" }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kube-scheduler", dest: "{{ BIN_DIR }}/kube-scheduler" }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubelet", dest: "{{ BIN_DIR }}/kubelet" }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kube-proxy", dest: "{{ BIN_DIR }}/kube-proxy" }
    - { url: "https://storage.googleapis.com/kubernetes-release/release/{{ k8s_version }}/bin/linux/amd64/kubectl", dest: "{{ BIN_DIR }}/kubectl" }

- name: Download Flannel
  get_url:
    url: 'https://github.com/coreos/flannel/releases/download/{{ flannel_version }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz'
    dest: '{{ BIN_DIR }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz'
    mode: 0644

- name: Download Etcd
  get_url:
    url: 'https://github.com/coreos/etcd/releases/download/{{ etcd_version }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz'
    dest: '{{ BIN_DIR }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz'
    mode: 0644

- name: Extract Flannel archive
  unarchive:
    src: '{{ BIN_DIR }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz'
    dest: "{{ BIN_DIR }}"
    exclude: 
      - mk-docker-opts.sh
      - README.md
    mode: 0554

- name: Extract Etcd archive
  unarchive:
    src: '{{ BIN_DIR }}/etcd-{{ etcd_version }}-linux-amd64.tar.gz'
    dest: "{{ BIN_DIR }}"
    exclude: 
      - Documentation
      - README-etcdctl.md  
      - README.md  
      - READMEv2-etcdctl.md
    extra_opts: "--strip-components=1"

- name: Download cri-tools
  get_url:
    url: 'https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ cri_tools_version }}/crictl-{{ cri_tools_version }}-linux-amd64.tar.gz'
    dest: '{{ BIN_DIR }}/crictl-{{ cri_tools_version }}-linux-amd64.tar.gz'
    mode: 0644
    
- name: Extract cri-tools archive
  unarchive:
    src: '{{ BIN_DIR }}/crictl-{{ cri_tools_version }}-linux-amd64.tar.gz'
    dest: "{{ BIN_DIR }}"
    mode: 0554

- name: Download runc
  get_url:
    url: 'https://github.com/opencontainers/runc/releases/download/{{ runc_version }}/runc.amd64'
    dest: '{{ BIN_DIR }}/runc'
    mode: 0644
    
- name: Download cni
  get_url:
    url: 'https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz'
    dest: '{{ BIN_DIR }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz'
    mode: 0644

- name: Create cni directory
  file:
    path: '{{ BIN_DIR }}/cni'
    state: directory

- name: Extract cni archive
  unarchive:
    src: '{{ BIN_DIR }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz'
    dest: "{{ BIN_DIR }}/cni"
    mode: 0554

- name: Download containerd
  get_url:
    url: 'https://github.com/containerd/containerd/releases/download/v{{ containerd_version }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz'
    dest: '{{ BIN_DIR }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz'
    mode: 0644

- name: Create containerd directory
  file:
    path: '{{ BIN_DIR }}/containerd'
    state: directory

- name: Extract containerd archive
  unarchive:
    src: '{{ BIN_DIR }}/containerd-{{ containerd_version }}-linux-amd64.tar.gz'
    dest: "{{ BIN_DIR }}/containerd"
    mode: 0554

